name: Update submodule
description: "Update submodule to latest commit"
inputs:
  repository:
    description: "Repository to update to from"
    required: true
  token:
    description: "Personal Access Token to use for the target repository"
    required: true
  commit_name:
    description: "Name to use for the commit"
    required: true
    default: "GitHub Action"
  commit_email:
    description: "Email to use for the commit"
    required: true
  submodule_path:
    description: "Path to the submodule"
    required: true
runs:
  using: composite
  steps:
    - name: Partial Clone
      shell: bash
      run: |
        REPO="https://${GITHUB_ACTOR}:${{ inputs.token }}@github.com/${{ inputs.repository }}.git"
        git clone --filter=blob:none --sparse --depth 1 $REPO repo
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - name: Config git for repo
      shell: bash
      working-directory: repo
      run: |
        git config user.name "${{ inputs.commit_name }}"
        git config user.email "${{ inputs.commit_email }}"
    - name: Get submodule git repository and print to step output
      id: full_repo_name
      shell: bash
      working-directory: repo
      run: |
        git_output=$(git config -f .gitmodules -l)

        # Use sed to extract the submodule URL
        submodule_git_url=$(echo "$git_output" | sed -n 's/submodule\..*\.url=\(.*\)/\1/p')

        # get org/repo from URL
        full_repo_name=$(echo "$submodule_git_url" | sed -n 's/.*github.com\/\(.*\)\.git/\1/p')

        echo "full_repo_name=${full_repo_name}" >> $GITHUB_OUTPUT
    - name: Fetch latest commit sha with GitHub Rest API
      id: get_latest_commit
      uses: sergeysova/jq-action@v2
      with:
        cmd: |
          curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ steps.full_repo_name.outputs.full_repo_name }}/commits | jq -r '.[0] | .sha'
    - name: Update submodule index
      shell: bash
      working-directory: repo
      run: |
        echo "Repo URL: ${{ steps.full_repo_name.outputs.value }}"
        git update-index --cacheinfo 160000 ${{ steps.get_latest_commit.outputs.value }} ${{ inputs.submodule_path }}
    - name: Commit changes
      shell: bash
      working-directory: repo
      run: |
        if [[ -z $(git status --porcelain) ]]; then
          echo "No changes found in workspace. Aborting commit."
        else
          git add "${{ inputs.submodule_path }}"
          git commit -m "Update submodule to latest commit ${{ steps.get_latest_commit.outputs.value }}"
        fi
    - name: Push to branch
      shell: bash
      working-directory: repo
      run: |
        git push
